	.globl main
	.data
prompt:	.asciz "Enter String:\n"
header:	.asciz "\nMost adjacent digits:\n"
nodig: 	.asciz "\nNo digits found\n"
buff:	.space 256

	.text
main:
	la	a0, prompt
	li	a7, 4
	ecall
	
	la	a0, buff
	li	a1, 256
	li	a7, 8
	ecall
start_count:
	la	t0, buff	# current pointer
	mv	t1, zero	# current size
	la	t2, buff	# longest-array pointer
	mv	t3, zero	# maximal size
	li	t5, '0'
	li	t6, '9'		# for comparisons

loop:
	lbu	t4, (t0)	# current character
	beqz	t4, end
	blt	t4, t5, not_digit
	bgt	t4, t6, not_digit
is_digit:
	addi	t1, t1, 1
	addi	t0, t0, 1
	b 	loop
not_digit:
	bgt	t1, t3, new_max
	mv	t1, zero	# clear current size
	addi	t0, t0, 1
	b 	loop
new_max:
	sub	t2, t0, t1	# max_pointer is current pointer minus size
	mv	t3, t1		# max size is current size
	mv	t1, zero	# clear current size
	addi 	t0, t0, 1
	b	loop

end:
print_header:
	la	a0, header
	li	a7, 4
	ecall
make_string:
	# edit buffer and place 0 at the end of digits, quick and simple
	add	t0, t2, t3
	sb	zero, (t0)

	mv	a0, t2
	li	a7, 4
	ecall
	
exit:
	li	a7, 10
	ecall


	
	
	
	
	
